{{- if and .Values.tls.enabled (not .Values.tls.existingSecret) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pomerium-console.tls.secret" . }}
  labels:
    {{- include "pomerium-console.labels" . | nindent 4 }}
  annotations:
{{- if .Values.tls.forceGenerate }}
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
{{- else if .Values.tls.generate }}
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation
{{- end }}
type: Opaque
{{-     if and .Values.tls.generate (or .Release.IsInstall .Values.tls.forceGenerate ) -}}
{{- $ca := genCA "default-ca" 3650 }}
{{- $cn := (printf "%s.%s.svc.cluster.local" (include "pomerium-console.fullname" .) .Release.Namespace ) -}}
{{- $sanList := list (printf "%s.%s" (include "pomerium-console.fullname" . ) ) (printf "%s.%s.svc.cluster.local" (include "pomerium-console.fullname" .) .Release.Namespace ) (printf "%s.%s" (include "pomerium-console.fullname" .) .Release.Namespace ) }}
{{- $kp := genSignedCert $cn nil $sanList 3650 $ca }}
data:
  tls.crt: {{ $kp.Cert | b64enc }}
  tls.key: {{ $kp.Key | b64enc }}
{{-     else if and .Values.tls.key .Values.tls.cert -}}
data:
  tls.crt: {{ .Values.tls.cert | b64enc }}
  tls.key: {{ .Values.tls.key | b64enc }}
{{-     end -}}
{{- end -}}

{{- if and .Values.tls.ca (not .Values.tls.existingCASecretKey) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pomerium-console.tls.ca.secret" . }}
  labels:
    {{- include "pomerium-console.labels" . | nindent 4 }}
  annotations:
type: Opaque
data:
  {{ .Values.tls.caSecretKey }}: {{ .Values.tls.ca }}
{{- end -}}
