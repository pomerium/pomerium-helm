# For detailed explanation of each of the configuration settings see
# https://www.pomerium.io/reference/

nameOverride: ""
fullnameOverride: ""

# settings that are shared by all services
config:
  # routes under this wildcard domain are handled by pomerium
  rootDomain: corp.beyondperimeter.com

  # secret value initialization
  existingSecret: ""
  existingCASecret: ""
  ca:
    cert: ""
    key: ""
  sharedSecret: ""
  cookieSecret: ""
  generateSharedSecrets: true
  lookupExistingSecrets: true
  forceGenerateSharedSecrets: false
  generateTLS: true
  generateTLSAnnotations: {}
  forceGenerateTLS: false
  generateSigningKey: true
  forceGenerateSigningKey: false

  extraOpts: {}
  existingPolicy: ""
  insecure: false
  administrators: ""
  policy: []
  existingSigningKeySecret: ""
  signingKey: ""

authenticate:
  fullnameOverride: ""
  nameOverride: ""
  existingTLSSecret: ""
  redirectUrl: ""
  cacheServiceUrl: ""
  # see https://www.pomerium.io/docs/identity-providers.html
  idp:
    provider: google
    clientID: "REPLACE_ME"
    clientSecret: "REPLACE_ME"
    url: ""
    scopes: ""
    serviceAccount: ""
  tls:
    cert: ""
    key: ""
    defaultSANList: []
    defaultIPList: []
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50
  pdb:
    enabled: false
    minAvailable: 1
  service:
    annotations: {}
  deployment:
    annotations: {}
    extraEnv: {}
  serviceAccount:
    annotations: {}
    nameOverride: ""

authorize:
  fullnameOverride: ""
  nameOverride: ""
  existingTLSSecret: ""
  tls:
    cert: ""
    key: ""
    defaultSANList: []
    defaultIPList: []
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50
  pdb:
    enabled: false
    minAvailable: 1
  service:
    annotations: {}
  deployment:
    annotations: {}
    extraEnv: {}
  serviceAccount:
    annotations: {}
    nameOverride: ""

cache:
  fullnameOverride: ""
  nameOverride: ""
  existingTLSSecret: ""
  tls:
    cert: ""
    key: ""
    defaultSANList: []
    defaultIPList: []
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  service:
    annotations: {}
  deployment:
    annotations: {}
    extraEnv: {}
  serviceAccount:
    annotations: {}
    nameOverride: ""

databroker:
  storage:
    type: "memory"
    autoconfigure: true
    connectionString: ""
    tlsSkipVerify: false
    clientTLS:
      existingSecretName: ""
      existingCASecretKey: ""
      cert: ""
      key: ""
      ca: ""

proxy:
  fullnameOverride: ""
  nameOverride: ""
  existingTLSSecret: ""
  tls:
    cert: ""
    key: ""
    defaultSANList: []
    defaultIPList: []
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50
  pdb:
    enabled: false
    minAvailable: 1
  authenticateServiceUrl: ""
  authorizeInternalUrl: ""
  service:
    annotations: {}
  deployment:
    annotations: {}
    extraEnv: {}
  serviceAccount:
    annotations: {}
    nameOverride: ""

apiProxy:
  enabled: false
  ingress: true
  fullNameOverride: ""
  name: "kubernetes"

operator:
  enabled: false
  fullnameOverride: ""
  nameOverride: ""
  replicaCount: 1
  image:
    repository: "pomerium/pomerium-operator"
    tag: "v0.0.4"
  config:
    ingressClass: pomerium
    serviceClass: pomerium
    debug: false
  deployment:
    annotations: {}

forwardAuth:
  nameOverride: ""
  enabled: false
  # Will not create an ingress. ForwardAuth is ony accessible as internal service.
  internal: false

service:
  # Service type can be set to ClusterIP, NodePort or LoadBalancer.
  authorize:
    headless: true
  cache:
    headless: true
  type: ClusterIP
  # externalPort defaults to 80 or 443 depending on config.insecure
  externalPort: ""
  annotations:
    {}
    # ===  GKE load balancer tweaks; default on until I can figure out
    # how the hell to escape this string from the helm CLI
    # cloud.google.com/app-protocols: '{"https":"HTTPS"}'
  labels: {}
  grpcTrafficPort:
    nameOverride: ""
  httpTrafficPort:
    nameOverride: ""

ingress:
  secretName: ""
  secret:
    name: ""
    cert: ""
    key: ""
  tls:
    hosts: []
  enabled: true
  hosts: []
  annotations:
    {}
    # === nginx tweaks
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    # ===  GKE load balancer tweaks; default on until I can figure out
    # how the hell to escape this string from the helm CLI
    # kubernetes.io/ingress.allow-http: "false"

resources:
  {}
  # limits:
  #   cpu: 1
  #   memory: 600Mi
  # requests:
  #   cpu: 100m
  #   memory: 300Mi

priorityClassName: ""

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

podAnnotations: {}
podLabels: {}
replicaCount: 1

# For any other settings that are optional. for a complete listing see:
# https://www.pomerium.io/docs/config-reference.html
extraEnv: {}
extraEnvFrom: []
extraArgs: {}
extraVolumes: {}

annotations: {}
imagePullSecrets: ""

image:
  repository: "pomerium/pomerium"
  tag: "v0.10.6"
  pullPolicy: "IfNotPresent"

metrics:
  enabled: false
  port: 9090

tracing:
  enabled: false
  provider: ""
  debug: false
  jaeger:
    collector_endpoint: ""
    agent_endpoint: ""

serviceMonitor:
  enabled: false
  namespace: ""
  labels:
    release: prometheus

rbac:
  create: true

redis:
  enabled: false
  existingSecret: pomerium-redis-password
  existingSecretPasswordKey: password
  generateTLS: true
  forceGenerateTLS: false
  cluster:
    slaveCount: 1
  tls:
    enabled: true
    certificatesSecret: pomerium-redis-tls
    certFilename: tls.crt
    certKeyFilename: tls.key
    certCAFilename: ca.crt
